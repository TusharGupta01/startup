version: 2 # use CircleCI 2.0
jobs: # A basic unit of work in a run
  build: # runs not using Workflows must have a `build` job as entry point 
    # directory where steps are run
    working_directory: ~/startup/startup
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.7.1
        environment: # environment variables for the Postgres container.
            PIPENV_VENV_IN_PROJECT: true
            TEST_DATABASE_URL: mysql://root@127.0.0.1:3306/startup?sslmode=disable
            DB_CONNECTION: mysql
            DB_HOST: 127.0.0.1
            DB_PORT: 3306
            DB_DATABASE: startup
            DB_USERNAME: root
      - image: mysql:8.0.12
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_DATABASE: startup
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip3 install pipenv
            pipenv install
            pipenv shell
      # - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
      #     key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      #     paths:
      #       - ".venv"
      #       - "/usr/local/bin"
      #       - "/usr/local/lib/python3.7/site-packages"
      - run:
          command: |
            pipenv run "python3 manage.py test"
      # - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
      #     path: test-results
      # - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
      #     path: test-results
      #     destination: tr1